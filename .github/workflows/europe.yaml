name: Publish Europe Data

on:
  workflow_dispatch:
  schedule:
    - cron:  '30 10 * * 2'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  packages: write
  contents: write

jobs:
  build_central-europe-ext:
    name: Build Europe map
    runs-on: ubuntu-latest
    steps:
      - name: Free some disk space
        run: |
          df -h
          sudo apt-get remove -y '^dotnet-.*' '^llvm-.*' 'php.*' '^mongodb-.*' '^mysql-.*' '^postgresql-.*' '^gfortran-.*' '^cmake-.*' '^aspnetcore-.*' '^clang-.*' '^cpp-.*' '^libmono-.*' '^mono-.*' '^ruby.*' '^r-.*' '^python3-.*' azure-cli  google-chrome-stable firefox powershell
          sudo rm -rf /usr/local/lib/android /opt/ghc /opt/hostedtoolcache/CodeQL /usr/local/graalvm/ /usr/local/share/powershell /usr/local/lib/android /usr/local/lib/node_modules /usr/local/.ghcup/ /usr/share/dotnet/ /opt/hostedtoolcache /opt/microsoft /usr/local/aws-* /usr/share/miniconda
          sudo apt-get autoremove -y
          sudo apt-get clean
          docker rmi -f node:14 node:16 node:18 node:14-alpine node:16-alpine node:18-alpine ubuntu:18.04 ubuntu:20.04 ubuntu:22.04 debian:10 debian:11 buildpack-deps:buster buildpack-deps:bullseye
          df -h

      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          build-mount-path: /home/runner/work/map-data/storage
          temp-reserve-mb: 10240

      - name: Check out the repo
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 1

      - name: Login to GitHub Packages Docker Registry
        uses: redhat-actions/podman-login@v1
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: ghcr.io
          logout: false
      - name: Provide dependencies
        run: |
          sudo apt-get install -y temurin-17-jdk expat libgdal30 libgeos-c1v5 libboost-program-options1.74.0 python3-pip libprotobuf23
          sudo pip install openmaptiles-tools mbutil

          sudo chmod +w /opt
          docker pull ghcr.io/cmahnke/map-tools/osmium:ubuntu-22.04
          docker create --name osmium ghcr.io/cmahnke/map-tools/osmium:ubuntu-22.04
          docker cp osmium:/opt/osmium /opt/osmium
          docker rm -f osmium
          docker rmi ghcr.io/cmahnke/map-tools/osmium:ubuntu-22.04

          docker pull ghcr.io/cmahnke/map-tools/osmctools:ubuntu-22.04
          docker create --name osmctools ghcr.io/cmahnke/map-tools/osmctools:ubuntu-22.04
          docker cp osmctools:/opt/osmctools /opt/osmctools
          docker rm -f osmctools
          docker rmi ghcr.io/cmahnke/map-tools/osmctools:ubuntu-22.04

          docker pull ghcr.io/cmahnke/projektemacher-maps/planetiler:latest
          docker create --name planetiler ghcr.io/cmahnke/projektemacher-maps/planetiler:latest
          docker cp planetiler:/opt/planetiler /opt/planetiler
          docker rm -f planetiler
          docker rmi ghcr.io/cmahnke/projektemacher-maps/planetiler:latest

          df -h

      - name: Validate dependencies
        run: |
          /opt/osmctools/bin/osmconvert
          /opt/osmctools/bin/osmfilter
          /opt/osmium/bin/osmium
          mb-util
          java -Xmx5g -jar /opt/planetiler/planetiler-*-with-deps.jar
          sudo rm -rf /var/lib/apt/lists/*

      - name: Run data generator
        run: |
          mv deploy/europe/* /home/runner/work/map-data/storage
          cd /home/runner/work/map-data/storage/scripts
          ./run.sh conf.sh
          mv /home/runner/work/map-data/storage/scripts/tiles /home/runner/work/map-data/map-data/
          cd /home/runner/work/map-data/map-data/

          # Undo volume mounts
          sudo swapoff -a
          sudo umount -f /home/runner/work/map-data/storage
          sudo lvchange -an /dev/mapper/buildvg-swap
          sudo lvchange -an /dev/mapper/buildvg-buildlv
          sudo lvremove -f /dev/mapper/buildvg-swap
          sudo lvremove -f /dev/mapper/buildvg-buildlv
          sudo vgremove buildvg

          echo "lo pv.img"
          sudo losetup -j /pv.img
          echo "lo tmp-pv.img"
          sudo losetup -j /mnt/tmp-pv.img

          echo "Running pvremove"
          sudo pvremove `sudo losetup -j /pv.img |cut -d ':' -f 1`
          sudo pvremove `sudo losetup -j /mnt/tmp-pv.img |cut -d ':' -f 1`
          echo "Running losetup"
          sudo losetup -d `sudo losetup -j /pv.img |cut -d ':' -f 1`
          sudo losetup -d `sudo losetup -j /mnt/tmp-pv.img |cut -d ':' -f 1`

          sudo rm -f /pv.img /mnt/tmp-pv.img
          # Recreate swap
          sudo fallocate -l 4G /mnt/swapfile
          sudo mkswap /mnt/swapfile
          sudo swapon /mnt/swapfile

      - name: Using Buildah Action to create image
        uses: redhat-actions/buildah-build@v2
        with:
          base-image: alpine:3.18
          image: ghcr.io/cmahnke/map-data/europe
          tags: latest
          content: |
            deploy/europe/scripts/tiles

      - name: Push To GitHub packages
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ghcr.io/cmahnke/map-data/europe
          tags: latest
          registry: ghcr.io
